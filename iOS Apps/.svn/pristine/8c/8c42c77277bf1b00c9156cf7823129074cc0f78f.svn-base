//
//  TimeEntryHistoryViewController.m
//  ezClocker
//
//  Created by Raya Khashab on 2/27/15.
//  Copyright (c) 2015 ezNova Technologies LLC. All rights reserved.
//

#import "TimeEntryHistoryViewController.h"
#import "CommonLib.h"
#import "user.h"

@implementation TimeEntryHistoryViewController

- (void)viewWillAppear:(BOOL)animated
{
    [super viewWillAppear: animated];
    [_historyTable reloadData];
    [self callGetTimeEntryHistory];
    
}

-(void) doDoneClick{
    [self.delegate historyTimeEntryViewControllerDidFinish:self];
}

- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 2;
    
}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section {
    return 34.f;
}

//because we are overridng the color of the section header we'll also need to set the Header text
//because by using this method it will override whatever is in titleForHeaderInSection method
-(UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    UIView *tempView=[[UIView alloc]initWithFrame:CGRectMake(0,200,300,244)];
    tempView.backgroundColor = UIColorFromRGB(BLUE_TOOLBAR_COLOR);
    UILabel *tempLabel=[[UILabel alloc]initWithFrame:CGRectMake(15,0,300,36)];
    tempLabel.backgroundColor=[UIColor clearColor];
    tempLabel.textColor = [UIColor whiteColor];
    tempLabel.font = [UIFont fontWithName:@"Helvetica" size:16.0f];
    tempLabel.font = [UIFont boldSystemFontOfSize:16.0f];
    tempLabel.text =  @"03/03/2015";
    
    
    [tempView addSubview:tempLabel];
    
    return tempView;
}

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    
    return 2;

    
}
- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    static NSString *CellIdentifier = @"HistoryCell";

    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:CellIdentifier];
    
    // Configure Cell
    UILabel *nameLabel = (UILabel *)[cell.contentView viewWithTag:10];
    [nameLabel setText:@"Joe Smith"];

    UILabel *label = (UILabel *)[cell.contentView viewWithTag:11];
    [label setText:@"Change To: 03/06/2015  11:00AM"];
    
    UILabel *noteLabel = (UILabel *)[cell.contentView viewWithTag:12];
    [noteLabel setText:@"Note: Had to update the clock in because my employee forgot to it and this is the second time he forgot"];
    noteLabel.textColor = [UIColor colorWithRed:81.0/255.0 green:102.0/255.0 blue:145.0/255.0 alpha:1.0];
    
    


     return cell;
}

-(void) startSpinner{
    if (!spinner)
    {
        spinner = [[MBProgressHUD alloc] initWithView:self.view];
    }
    spinner.labelText = @"Retrieving Data..";
    [self.view addSubview:spinner];
    [spinner show:YES];
}

-(void) stopSpinner{
    [spinner hide:YES];
}

-(void) callGetTimeEntryHistory{
    UIAlertView *alert;
    NSString *httpPostString;
    NSString *request_body;
    UserClass *user = [UserClass getInstance];
    
    NSString *timeEntryID = @"126";

    httpPostString = [NSString stringWithFormat:@"%@api/v1/timeentry/%@/audits", SERVER_URL, timeEntryID];
    
    
    request_body = [NSString
                    stringWithFormat:@"timeEntryId=%@",
                    [timeEntryID  stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding]];
    
    
    NSMutableURLRequest *urlRequest = [[NSMutableURLRequest alloc] initWithURL:[NSURL URLWithString:httpPostString]];
    
    
    
    //set HTTP Method
    NSString *tmpEmployerID = [user.employerID stringValue];
    NSString *tmpAuthToken = user.authToken;
    
    [urlRequest setHTTPMethod:@"GET"];
    [urlRequest setValue:@"application/json" forHTTPHeaderField:@"Accept"];
    [urlRequest setValue:@"application/json" forHTTPHeaderField:@"Content-Type"];
    [urlRequest setValue:tmpEmployerID forHTTPHeaderField:@"employerId"];
    [urlRequest setValue:tmpAuthToken forHTTPHeaderField:@"authToken"];
    
    
    
    //set request body into HTTPBody.
    //    [urlRequest setHTTPBody:[request_body dataUsingEncoding:NSUTF8StringEncoding]];
    
    //set request url to the NSURLConnection
    NSURLConnection *connection = [[NSURLConnection alloc] initWithRequest:urlRequest  delegate:self startImmediately:YES];
    if (connection)
        [UIApplication sharedApplication].networkActivityIndicatorVisible = YES;
    else {
        alert = [[UIAlertView alloc] initWithTitle:nil message:@"Connection to the server failed" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
        [alert show];
        
    }
    
    
}


-(void)connection:(NSURLConnection *)connection didReceiveResponse:(NSURLResponse *)response
{
    if ([response isKindOfClass: [NSHTTPURLResponse class]]) {
        int statusCode = [(NSHTTPURLResponse*) response statusCode];
        if (statusCode == SERVICE_UNAVAILABLE_ERROR){
            [self stopSpinner];
            [UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
            
            //error 503 is when tomcat is down
            UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"ezClocker is unable to connect to the server at this time. Please try again later" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
            [alert show];
        }
    }
    
    
    data = [[NSMutableData alloc] init];
}
-(void)connection:(NSURLConnection *)connection didReceiveData:(NSData *)dataIn
{
    [data appendData:dataIn];
}



- (void)connection:(NSURLConnection *)connection didFailWithError:(NSError *)error
{
    // release the connection, and the data object
    // receivedData is declared as a method instance elsewhere
    [UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
    [self stopSpinner];
    
    UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"ezClocker is unable to connect to the server at this time. Please try again later" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
    
    [alert show];
    
    connection = nil;
    data = nil;
}

-(void)connectionDidFinishLoading:(NSURLConnection *)connection
{
    [self stopSpinner];
    NSError *error = nil;
    
    [UIApplication sharedApplication].networkActivityIndicatorVisible = NO;
    
    NSArray *results = data ? [NSJSONSerialization JSONObjectWithData:data options:0 error:&error] : nil;
    
    //sometimes we get a json object (usually when something goes wrong) and other times we get an array of time entries
    NSString* JSONStr = [[NSString alloc] initWithData:data
                                              encoding:NSUTF8StringEncoding];
    
    NSString *resultMessage = [results valueForKey:@"message"];

    if (([resultMessage isEqual:[NSNull null]]) || (![resultMessage isEqualToString:@"Success"])){
//        [MetricsLogWebService LogException: [NSString stringWithFormat:@"Error from TimeSheetMasterViewController.m JSON Error= %@ resultMessage= %@", error.localizedDescription, resultMessage]];
        
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:nil message:@"Server Failure" delegate:nil cancelButtonTitle:@"OK" otherButtonTitles:nil];
        [alert show];
    }
    else
    {
        NSArray *timeEntriesAuditsArray = [results valueForKey:@"timeEntryAudits"];
        
        NSString *status, *modifiedIso, *modifiedByName, *log;
        
        for (NSDictionary *timeEntryAuditRec in timeEntriesAuditsArray){
            
            status = [timeEntryAuditRec valueForKey:@"status"];
        }
        

    }
}

@end
